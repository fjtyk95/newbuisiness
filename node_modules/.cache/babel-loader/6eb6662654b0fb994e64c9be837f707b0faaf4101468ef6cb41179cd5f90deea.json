{"ast":null,"code":"import React,{useState,useEffect}from'react';import StartScreen from'./components/StartScreen';import QuestionScreen from'./components/QuestionScreen';import ResultScreen from'./components/ResultScreen';import'./styles/App.css';// サンプルの質問データ\nimport{jsx as _jsx}from\"react/jsx-runtime\";const sampleQuestions=[{id:1,category:'ビジネスモデル',questionText:'法人向けのサービスを作りたいですか？',yesScore:5,noScore:-3},{id:2,category:'ビジネスモデル',questionText:'サブスクリプション型の収益モデルに興味がありますか？',yesScore:3,noScore:-1},{id:3,category:'技術スタック',questionText:'モバイルアプリよりもWebアプリの方が得意ですか？',yesScore:2,noScore:-2},{id:4,category:'ターゲット',questionText:'個人ユーザーをターゲットにしたいですか？',yesScore:-3,noScore:4},{id:5,category:'機能',questionText:'ユーザー同士のコミュニケーション機能は重要ですか？',yesScore:2,noScore:-1}// 実際のアプリでは、より多くの質問を追加\n];var AppState=/*#__PURE__*/function(AppState){AppState[AppState[\"START\"]=0]=\"START\";AppState[AppState[\"QUESTION\"]=1]=\"QUESTION\";AppState[AppState[\"RESULT\"]=2]=\"RESULT\";return AppState;}(AppState||{});const App=()=>{const[appState,setAppState]=useState(AppState.START);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[answers,setAnswers]=useState([]);const[totalScore,setTotalScore]=useState(0);const[questions,setQuestions]=useState([]);// 初期質問をランダムに選択\nuseEffect(()=>{// 実際のアプリでは、APIからデータを取得するなどの処理を行う\n// ここでは簡易的にサンプルデータをシャッフル\nconst shuffled=[...sampleQuestions].sort(()=>0.5-Math.random());setQuestions(shuffled.slice(0,5));// 5問だけ選択（デモ用）\n},[]);const handleStart=()=>{setAppState(AppState.QUESTION);setCurrentQuestionIndex(0);setAnswers([]);setTotalScore(0);};const handleAnswer=answer=>{const newAnswers=[...answers,answer];setAnswers(newAnswers);const newTotalScore=totalScore+(answer.answer?questions[currentQuestionIndex].yesScore:questions[currentQuestionIndex].noScore);setTotalScore(newTotalScore);if(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);}else{setAppState(AppState.RESULT);}};const renderContent=()=>{switch(appState){case AppState.START:return/*#__PURE__*/_jsx(StartScreen,{onStart:handleStart});case AppState.QUESTION:return questions.length>0?/*#__PURE__*/_jsx(QuestionScreen,{question:questions[currentQuestionIndex],currentQuestionNumber:currentQuestionIndex+1,totalQuestions:questions.length,onAnswer:handleAnswer}):/*#__PURE__*/_jsx(\"div\",{children:\"\\u8CEA\\u554F\\u3092\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"});case AppState.RESULT:return/*#__PURE__*/_jsx(ResultScreen,{answers:answers,totalScore:totalScore,onRestart:handleStart});default:return/*#__PURE__*/_jsx(\"div\",{children:\"\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\"});}};return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:renderContent()});};export default App;","map":{"version":3,"names":["React","useState","useEffect","StartScreen","QuestionScreen","ResultScreen","jsx","_jsx","sampleQuestions","id","category","questionText","yesScore","noScore","AppState","App","appState","setAppState","START","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","totalScore","setTotalScore","questions","setQuestions","shuffled","sort","Math","random","slice","handleStart","QUESTION","handleAnswer","answer","newAnswers","newTotalScore","length","RESULT","renderContent","onStart","question","currentQuestionNumber","totalQuestions","onAnswer","children","onRestart","className"],"sources":["/Users/yukifujita/Library/CloudStorage/GoogleDrive-fjtyk95@gmail.com/マイドライブ/00_GitHub/newbuisiness/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StartScreen from './components/StartScreen';\nimport QuestionScreen from './components/QuestionScreen';\nimport ResultScreen from './components/ResultScreen';\nimport { Question, Answer } from './types/types';\nimport './styles/App.css';\n\n// サンプルの質問データ\nconst sampleQuestions: Question[] = [\n  {\n    id: 1,\n    category: 'ビジネスモデル',\n    questionText: '法人向けのサービスを作りたいですか？',\n    yesScore: 5,\n    noScore: -3,\n  },\n  {\n    id: 2,\n    category: 'ビジネスモデル',\n    questionText: 'サブスクリプション型の収益モデルに興味がありますか？',\n    yesScore: 3,\n    noScore: -1,\n  },\n  {\n    id: 3,\n    category: '技術スタック',\n    questionText: 'モバイルアプリよりもWebアプリの方が得意ですか？',\n    yesScore: 2,\n    noScore: -2,\n  },\n  {\n    id: 4,\n    category: 'ターゲット',\n    questionText: '個人ユーザーをターゲットにしたいですか？',\n    yesScore: -3,\n    noScore: 4,\n  },\n  {\n    id: 5,\n    category: '機能',\n    questionText: 'ユーザー同士のコミュニケーション機能は重要ですか？',\n    yesScore: 2,\n    noScore: -1,\n  },\n  // 実際のアプリでは、より多くの質問を追加\n];\n\nenum AppState {\n  START,\n  QUESTION,\n  RESULT,\n}\n\nconst App: React.FC = () => {\n  const [appState, setAppState] = useState<AppState>(AppState.START);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState<Answer[]>([]);\n  const [totalScore, setTotalScore] = useState(0);\n  const [questions, setQuestions] = useState<Question[]>([]);\n\n  // 初期質問をランダムに選択\n  useEffect(() => {\n    // 実際のアプリでは、APIからデータを取得するなどの処理を行う\n    // ここでは簡易的にサンプルデータをシャッフル\n    const shuffled = [...sampleQuestions].sort(() => 0.5 - Math.random());\n    setQuestions(shuffled.slice(0, 5)); // 5問だけ選択（デモ用）\n  }, []);\n\n  const handleStart = () => {\n    setAppState(AppState.QUESTION);\n    setCurrentQuestionIndex(0);\n    setAnswers([]);\n    setTotalScore(0);\n  };\n\n  const handleAnswer = (answer: Answer) => {\n    const newAnswers = [...answers, answer];\n    setAnswers(newAnswers);\n    \n    const newTotalScore = totalScore + (answer.answer ? questions[currentQuestionIndex].yesScore : questions[currentQuestionIndex].noScore);\n    setTotalScore(newTotalScore);\n    \n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setAppState(AppState.RESULT);\n    }\n  };\n\n  const renderContent = () => {\n    switch (appState) {\n      case AppState.START:\n        return <StartScreen onStart={handleStart} />;\n      case AppState.QUESTION:\n        return questions.length > 0 ? (\n          <QuestionScreen\n            question={questions[currentQuestionIndex]}\n            currentQuestionNumber={currentQuestionIndex + 1}\n            totalQuestions={questions.length}\n            onAnswer={handleAnswer}\n          />\n        ) : (\n          <div>質問を読み込み中...</div>\n        );\n      case AppState.RESULT:\n        return (\n          <ResultScreen\n            answers={answers}\n            totalScore={totalScore}\n            onRestart={handleStart}\n          />\n        );\n      default:\n        return <div>エラーが発生しました</div>;\n    }\n  };\n\n  return <div className=\"app\">{renderContent()}</div>;\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}